---
// Astro script block
import Logo from '@components/Logo.astro';
import Button from '@components/ui/Button.astro';
import { Image } from 'astro:assets';

interface HeroContent {
  title: string;
  description: string;
  buttons?: {
    text: string;
    link: string;
    variant?: 'primary' | 'secondary' | 'ghostLight' | 'ghostDark';
    target?: string;
  }[];
  backgroundImage?: string | any;
  overlayOpacity?: number;
}

interface Props {
  content: HeroContent;
}

const { content } = Astro.props;
const opacity = content.overlayOpacity ?? 1;
---

<section class="header-offset relative" style="background-color: var(--color-background); color: var(--color-body-base)">
  <div class="site-container mx-auto px-4 py-small relative z-10 flex flex-col md:items-center md:justify-center md:text-center">
   <span class="place-self-center"> <Logo Height="100px" Width="100px"/> </span>
   <h1 
   class="text-4xl sm:text-5xl font-bold leading-snug" 
   style="color: var(--color-body-base)" 
   data-aos="fade-up"
 >
   {content.title}
 </h1>
 

    <p 
      class="mt-8 max-w-3xl text-xl text-balance"
      style="color: var(--color-accent)" 
      data-aos="fade-up"
      data-aos-delay="100"
    >
      {content.description}
    </p>

    {content.buttons && content.buttons.length > 0 && (
      <div class="flex flex-wrap gap-4 mt-8 justify-center" data-aos="fade-up" data-aos-delay="200">
        {content.buttons.map((button) => (
          <Button

            variant="primary"
            href={button.link}
            target={button.target || '_self'}
            class="transition-colors duration-300"

          >
            {button.text}
          </Button>
        ))}
      </div>
    )}
  </div>
</section>
